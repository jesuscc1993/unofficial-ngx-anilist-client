@import '~@angular/material/theming';

$primary-palette: mat-palette($mat-orange);
$accent-palette: mat-palette($mat-orange);

$themes: (
  dark: (
    material-theme: mat-dark-theme($primary-palette, $accent-palette),
    background: $mat-dark-theme-background,
    foreground: $mat-dark-theme-foreground,
    body-background: #333,
    border: rgba(white, 0.12),
    button-background: map-get($mat-gray, 700),
    success: (
      background: map-get($mat-green, 800),
      foreground: map-get($mat-green, 50),
    ),
    info: (
      background: map-get($mat-blue, 800),
      foreground: map-get($mat-blue, 50),
    ),
    warning: (
      background: map-get($mat-orange, 800),
      foreground: map-get($mat-orange, 50),
    ),
    error: (
      background: map-get($mat-red, 800),
      foreground: map-get($mat-red, 50),
    ),
  ),
  light: (
    material-theme: mat-light-theme($primary-palette, $accent-palette),
    background: $mat-light-theme-background,
    foreground: $mat-light-theme-foreground,
    body-background: #ccc,
    border: rgba(black, 0.12),
    button-background: map-get($mat-gray, 300),
    info: (
      background: map-get($mat-blue, 50),
      foreground: map-get($mat-blue, 600),
    ),
    warning: (
      background: map-get($mat-orange, 50),
      foreground: map-get($mat-orange, 600),
    ),
    error: (
      background: map-get($mat-red, 50),
      foreground: map-get($mat-red, 600),
    ),
  ),
);

$theme: map-get($themes, dark);

@include mat-core();
@include angular-material-theme(map-get($theme, material-theme));

body {
  background-color: map-get($theme, body-background);
  color: map-get(map-get($theme, foreground), text);
}

a {
  color: mat-color($primary-palette, darker);

  &:hover {
    color: mat-color($primary-palette, default);
  }
}

mat-card,
.mat-snack-bar-container {
  &.success {
    background: map-get(map-get($theme, success), background);
    color: map-get(map-get($theme, success), foreground);
  }
  &.info {
    background: map-get(map-get($theme, info), background);
    color: map-get(map-get($theme, info), foreground);
  }
  &.warning {
    background: map-get(map-get($theme, warning), background);
    color: map-get(map-get($theme, warning), foreground);
  }
  &.error {
    background: map-get(map-get($theme, error), background);
    color: map-get(map-get($theme, error), foreground);
  }
}

mat-toolbar {
  .section-links {
    a {
      border-top-color: transparent;

      &.active {
        border-bottom-color: mat-color($primary-palette, default);

        &,
        &:hover {
          color: mat-color($primary-palette, default);
        }
      }

      &:not(.active) {
        &:not(:hover) {
          color: invert(map-get(map-get($theme, background), app-bar), 33%);
        }
      }
    }
  }
}

.mat-raised-button {
  background: map-get($theme, button-background);
}

.mat-raised-button.mat-accent,
.mat-fab.mat-accent,
.mat-mini-fab.mat-accent {
  color: white;
}

.border,
.mat-divider {
  border-color: map-get($theme, border);
}

.mat-chip:not(.mat-basic-chip) {
  background-color: invert(map-get(map-get($theme, background), card), 50%);
  color: white;
}

mat-card {
  &.composite {
    .composite-header {
      .header:not(.tab) {
        border-color: map-get(map-get($theme, foreground), divider);
      }

      .tab-group {
        .header:not(.tab) {
          background-color: rgba(black, 0.06);
        }

        .tab {
          border-color: map-get(map-get($theme, foreground), divider);

          &.active {
            background-color: map-get(map-get($theme, background), card);
          }
        }
      }
    }
  }
}
