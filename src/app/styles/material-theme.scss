@use '@angular/material' as *;

$gray-0: white;

$primary-palette: define-palette($orange-palette);
$accent-palette: define-palette($orange-palette);

@function theme-alert($background) {
  @return (background: $background, foreground: darken($background, 50%));
}

$themes: (
  dark: (
    material-theme: define-dark-theme($primary-palette, $accent-palette),
    background: $dark-theme-background-palette,
    foreground: $dark-theme-foreground-palette,
    border: rgba($gray-0, 0.12),
    button-background: map-get($gray-palette, 500),
    success: theme-alert(map-get($green-palette, 500)),
    info: theme-alert(map-get($blue-palette, 500)),
    warning: theme-alert(map-get($orange-palette, 500)),
    error: theme-alert(map-get($red-palette, 500)),
  ),
);

$theme: map-get($themes, dark);

@include core();
@include all-component-themes(map-get($theme, material-theme));

a {
  color: get-color-from-palette($primary-palette, darker);

  &.secondary:not(.active):not(:hover) {
    color: map-get($grey-palette, 500);
  }

  &:hover {
    color: get-color-from-palette($primary-palette, default);
  }
}

hr,
vr {
  border-color: map-get(map-get($theme, foreground), divider);
}

mat-card,
.mat-snack-bar-container {
  @each $status in success, info, warning, error {
    &.#{$status} {
      background: map-get(map-get($theme, $status), background);
      color: map-get(map-get($theme, $status), foreground);
    }
  }
}

mat-toolbar {
  .section-links {
    a {
      border-top-color: transparent;

      &.active {
        border-bottom-color: get-color-from-palette($primary-palette, default);

        &,
        &:hover {
          color: get-color-from-palette($primary-palette, default);
        }
      }

      &:not(.active) {
        &:not(:hover) {
          color: map-get($grey-palette, 500);
        }
      }
    }
  }
}

.mat-raised-button {
  @mixin apply-button-theme($background) {
    background: $background;
    color: darken($background, 50%);
  }

  & {
    @include apply-button-theme(map-get($theme, button-background));
  }
  &.mat-primary {
    @include apply-button-theme(map-get($orange-palette, 400));
  }
  &.mat-accent {
    @include apply-button-theme(map-get($orange-palette, 400));
  }
  &.mat-warn {
    @include apply-button-theme(map-get($red-palette, 400));
  }
}

.mat-select .mat-select-placeholder {
  color: rgba(white, 0.6);
}

/* fix accessibility warning on invalid inputs */
.mat-form-field.mat-form-field-invalid {
  .mat-form-field-flex {
    background: map-get($red-palette, 700);

    .mat-form-field-label {
      color: inherit;
    }
  }

  .mat-form-field-underline {
    visibility: hidden;
  }
}

.border,
.mat-divider {
  border-color: map-get($theme, border);
}

.mat-chip:not(.mat-basic-chip) {
  $background: invert(map-get(map-get($theme, background), card), 33%);
  background-color: $background;
  color: lighten($background, 67%);
}

.mat-tooltip {
  background: rgba(map-get(map-get($theme, background), background), 90%);
}

mat-card {
  &.composite {
    .composite-header {
      .header:not(.tab) {
        border-color: map-get(map-get($theme, foreground), divider);
      }

      .tab-group {
        .header:not(.tab) {
          background-color: rgba(black, 0.06);
        }

        .tab {
          border-color: map-get(map-get($theme, foreground), divider);

          &.active {
            background-color: map-get(map-get($theme, background), card);
          }
        }
      }
    }

    .composite-footer {
      .footer:not(.tab) {
        border-color: map-get(map-get($theme, foreground), divider);
      }
    }
  }
}

.mat-form-field.mat-form-field-hide-placeholder {
  .mat-form-field-infix {
    .mat-input-element::placeholder {
      $color: map-get(map-get($theme, foreground), divider);
      color: $color;
      -webkit-text-fill-color: $color;
    }
  }
}

::-webkit-scrollbar,
::-webkit-scrollbar-corner,
::-webkit-scrollbar-track-piece {
  background: map-get($gray-palette, 900) !important;
}

::-webkit-scrollbar {
  width: 17px !important;
  height: 17px !important;
}

::-webkit-scrollbar-thumb {
  background: map-get($gray-palette, 700);
  border: 3px solid map-get($gray-palette, 900) !important;
  border-radius: 8px !important;
}

::-webkit-scrollbar-thumb:hover {
  background: map-get($gray-palette, 600);
}
